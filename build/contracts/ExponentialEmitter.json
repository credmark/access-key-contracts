{
  "contractName": "ExponentialEmitter",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cmk",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sCmk",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_halfLife",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "cmk",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "halfLife",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastEmitted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sCmk",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getEmittable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cmk\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sCmk\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_halfLife\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"cmk\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getEmittable\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"halfLife\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEmitted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sCmk\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/credmark/repos/access-key-contracts/contracts/ExponentialEmitter.sol\":\"ExponentialEmitter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/credmark/repos/access-key-contracts/contracts/ExponentialEmitter.sol\":{\"keccak256\":\"0xed7392c83035328c65d72e5f04ab146726ccbf265ce673980dc47443938c57b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2ef980c1499d749e9bb845bcb86c85d1c853b7ab174042942a079d1ba145deb8\",\"dweb:/ipfs/QmNytAdyr8r11MSgmoJFgto3u3wUnGrABHqYs4fDfFvzF4\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b34655953d18ba3a45b762fb6bdbb6549af69a27435e10ece178742bf70baf45\",\"dweb:/ipfs/QmcqjUoFLLMyx7dbwSHUnDBH6aphkVHXWQvQRRev5EAWEh\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://087318b21c528119f649899f5b5580566dd8d7b0303d4904bd0e8580c3545f14\",\"dweb:/ipfs/Qmbn5Mj7aUn8hJuQ8VrQjjEXRsXyJKykgnjR9p4C3nfLtL\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013\",\"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26e8b38a7ac8e7b4463af00cf7fff1bf48ae9875765bf4f7751e100124d0bc8c\",\"dweb:/ipfs/QmWcsmkVr24xmmjfnBQZoemFniXjj3vwT78Cz6uqZW1Hux\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0x78450f4e3b722cce467b21e285f72ce5eaf361e9ba9dd2241a413926246773cd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103065051300cd995fd4599ba91188d4071b92175b52f26110e02db091617c0\",\"dweb:/ipfs/QmSyDz67R2HCypDE8Pacn3voVwxw9x17NM66q47YgBnGqc\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://163776cbf565c722232393aa2d62cbe8a2ffb5805986abf4906c00e1e07450a6\",\"dweb:/ipfs/QmPZoN9T3cb6o8bGhjBPZcz7im8T8DWhpr3tjLwhJJHx9N\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516104a03803806104a0833981810160405281019061003291906100ed565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806003819055505050506101af565b6000815190506100d281610181565b92915050565b6000815190506100e781610198565b92915050565b6000806000606084860312156101065761010561017c565b5b6000610114868287016100c3565b9350506020610125868287016100c3565b9250506040610136868287016100d8565b9150509250925092565b600061014b82610152565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b61018a81610140565b811461019557600080fd5b50565b6101a181610172565b81146101ac57600080fd5b50565b6102e2806101be6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632f388c151461005c5780637bc90d1c1461007a578063996c0b2914610098578063ef3f197a146100b6578063f28c62d3146100d4575b600080fd5b6100646100f2565b6040516100719190610191565b60405180910390f35b610082610118565b60405161008f91906101ac565b60405180910390f35b6100a061011e565b6040516100ad91906101ac565b60405180910390f35b6100be610124565b6040516100cb9190610191565b60405180910390f35b6100dc61014a565b6040516100e991906101ac565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603c60045461015b91906101c7565b42101561016b5760009050610170565b600090505b90565b61017c81610247565b82525050565b61018b8161023d565b82525050565b60006020820190506101a66000830184610173565b92915050565b60006020820190506101c16000830184610182565b92915050565b60006101d28261023d565b91506101dd8361023d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102125761021161027d565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061025282610259565b9050919050565b60006102648261026b565b9050919050565b60006102768261021d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220231c66eb8cace32e5d7cc1ebf631f07c880ccca690e21aa584e973966e5182f164736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c80632f388c151461005c5780637bc90d1c1461007a578063996c0b2914610098578063ef3f197a146100b6578063f28c62d3146100d4575b600080fd5b6100646100f2565b6040516100719190610191565b60405180910390f35b610082610118565b60405161008f91906101ac565b60405180910390f35b6100a061011e565b6040516100ad91906101ac565b60405180910390f35b6100be610124565b6040516100cb9190610191565b60405180910390f35b6100dc61014a565b6040516100e991906101ac565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b60045481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000603c60045461015b91906101c7565b42101561016b5760009050610170565b600090505b90565b61017c81610247565b82525050565b61018b8161023d565b82525050565b60006020820190506101a66000830184610173565b92915050565b60006020820190506101c16000830184610182565b92915050565b60006101d28261023d565b91506101dd8361023d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156102125761021161027d565b5b828201905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061025282610259565b9050919050565b60006102648261026b565b9050919050565b60006102768261021d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220231c66eb8cace32e5d7cc1ebf631f07c880ccca690e21aa584e973966e5182f164736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1871:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "70:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "80:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "89:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "89:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "80:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "138:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "111:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "111:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "111:33:8"
                }
              ]
            },
            "name": "abi_decode_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "48:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "56:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:8",
                "type": ""
              }
            ],
            "src": "7:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "219:80:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "229:22:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "244:6:8"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "238:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "238:13:8"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "229:5:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "287:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "260:26:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "260:33:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "260:33:8"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "197:6:8",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "205:3:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "213:5:8",
                "type": ""
              }
            ],
            "src": "156:143:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "416:552:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "462:83:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "464:77:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "464:79:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "464:79:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "437:7:8"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "446:9:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "433:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "433:23:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "458:2:8",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "429:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "429:32:8"
                  },
                  "nodeType": "YulIf",
                  "src": "426:119:8"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "555:128:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "570:15:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "584:1:8",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "574:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "599:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "645:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "656:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "641:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "665:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "609:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "609:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "599:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "693:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "708:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "722:2:8",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "712:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "738:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "784:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "795:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "780:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "780:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "804:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "748:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "748:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "738:6:8"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "832:129:8",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "847:16:8",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "861:2:8",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "851:6:8",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "877:74:8",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "923:9:8"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "934:6:8"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "919:3:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "919:22:8"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "943:7:8"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "887:31:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "887:64:8"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "877:6:8"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "370:9:8",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "381:7:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "393:6:8",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "401:6:8",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "409:6:8",
                "type": ""
              }
            ],
            "src": "305:663:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1014:35:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1024:19:8",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1040:2:8",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1034:5:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1034:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1024:6:8"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1007:6:8",
                "type": ""
              }
            ],
            "src": "974:75:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1100:51:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1110:35:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1139:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1121:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1121:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1110:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1082:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1092:7:8",
                "type": ""
              }
            ],
            "src": "1055:96:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1202:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1227:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1234:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1223:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1223:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1212:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1184:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1194:7:8",
                "type": ""
              }
            ],
            "src": "1157:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1334:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1344:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1355:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1344:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1316:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1326:7:8",
                "type": ""
              }
            ],
            "src": "1289:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1461:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1478:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1481:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1471:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1471:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1471:12:8"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "1372:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1584:28:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1601:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1604:1:8",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1594:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1594:12:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1594:12:8"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "1495:117:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1661:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1718:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1727:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1730:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1720:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1720:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1720:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1684:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1709:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1691:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1691:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1681:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1681:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1674:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1674:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1671:63:8"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1654:5:8",
                "type": ""
              }
            ],
            "src": "1618:122:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1789:79:8",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1846:16:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1855:1:8",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1858:1:8",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1848:6:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1848:12:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1848:12:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1812:5:8"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1837:5:8"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1819:17:8"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1819:24:8"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1809:2:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1809:35:8"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1802:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1802:43:8"
                  },
                  "nodeType": "YulIf",
                  "src": "1799:63:8"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1782:5:8",
                "type": ""
              }
            ],
            "src": "1746:122:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1881:8",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "85:79:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "102:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "151:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "convert_t_contract$_ERC20_$745_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "107:43:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "107:50:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "95:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "95:63:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "95:63:8"
                }
              ]
            },
            "name": "abi_encode_t_contract$_ERC20_$745_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "73:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "80:3:8",
                "type": ""
              }
            ],
            "src": "7:157:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "235:53:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "252:3:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "275:5:8"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "257:17:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "257:24:8"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "245:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "245:37:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "245:37:8"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "223:5:8",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "230:3:8",
                "type": ""
              }
            ],
            "src": "170:118:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "405:137:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "415:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "427:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "438:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "423:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "423:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "415:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "508:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "521:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "532:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "517:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "517:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_contract$_ERC20_$745_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "451:56:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "451:84:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "451:84:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ERC20_$745__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "377:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "389:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "400:4:8",
                "type": ""
              }
            ],
            "src": "294:248:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "646:124:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "656:26:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "668:9:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "679:2:8",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "664:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "664:18:8"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "656:4:8"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "736:6:8"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "749:9:8"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "760:1:8",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "745:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "745:17:8"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "692:43:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "692:71:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "692:71:8"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "618:9:8",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "630:6:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "641:4:8",
                "type": ""
              }
            ],
            "src": "548:222:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "820:261:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "830:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "853:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "835:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "830:1:8"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "864:25:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "887:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "869:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "869:20:8"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "864:1:8"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1027:22:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "1029:16:8"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1029:18:8"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1029:18:8"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "948:1:8"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "955:66:8",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "1023:1:8"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "951:3:8"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "951:74:8"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "945:2:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "945:81:8"
                  },
                  "nodeType": "YulIf",
                  "src": "942:107:8"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1059:16:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "1070:1:8"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "1073:1:8"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1066:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1066:9:8"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "1059:3:8"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "807:1:8",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "810:1:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "816:3:8",
                "type": ""
              }
            ],
            "src": "776:305:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1132:81:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1142:65:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1157:5:8"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1164:42:8",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1153:3:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1153:54:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1142:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1114:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1124:7:8",
                "type": ""
              }
            ],
            "src": "1087:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1264:32:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1274:16:8",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1285:5:8"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1274:7:8"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1246:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1256:7:8",
                "type": ""
              }
            ],
            "src": "1219:77:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1375:66:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1385:50:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1429:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1398:30:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1398:37:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1385:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_contract$_ERC20_$745_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1355:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1365:9:8",
                "type": ""
              }
            ],
            "src": "1302:139:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1507:66:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1517:50:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1561:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "convert_t_uint160_to_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1530:30:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1530:37:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1517:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1487:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1497:9:8",
                "type": ""
              }
            ],
            "src": "1447:126:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1639:53:8",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1649:37:8",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1680:5:8"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "1662:17:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1662:24:8"
                  },
                  "variableNames": [
                    {
                      "name": "converted",
                      "nodeType": "YulIdentifier",
                      "src": "1649:9:8"
                    }
                  ]
                }
              ]
            },
            "name": "convert_t_uint160_to_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1619:5:8",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "converted",
                "nodeType": "YulTypedName",
                "src": "1629:9:8",
                "type": ""
              }
            ],
            "src": "1579:113:8"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1726:152:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1743:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1746:77:8",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1736:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1736:88:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1736:88:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1840:1:8",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1843:4:8",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1833:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1833:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1833:15:8"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1864:1:8",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1867:4:8",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1857:6:8"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1857:15:8"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1857:15:8"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "1698:180:8"
          }
        ]
      },
      "contents": "{\n\n    function abi_encode_t_contract$_ERC20_$745_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ERC20_$745_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ERC20_$745__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ERC20_$745_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_ERC20_$745_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 8,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "226:539:0:-:0;;;448:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;527:4;515:3;;:17;;;;;;;;;;;;;;;;;;555:5;542:4;;:19;;;;;;;;;;;;;;;;;;582:9;571:8;:20;;;;448:150;;;226:539;;7:143:8;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:::-;213:5;244:6;238:13;229:22;;260:33;287:5;260:33;:::i;:::-;156:143;;;;:::o;305:663::-;393:6;401;409;458:2;446:9;437:7;433:23;429:32;426:119;;;464:79;;:::i;:::-;426:119;584:1;609:64;665:7;656:6;645:9;641:22;609:64;:::i;:::-;599:74;;555:128;722:2;748:64;804:7;795:6;784:9;780:22;748:64;:::i;:::-;738:74;;693:129;861:2;887:64;943:7;934:6;923:9;919:22;887:64;:::i;:::-;877:74;;832:129;305:663;;;;;:::o;1055:96::-;1092:7;1121:24;1139:5;1121:24;:::i;:::-;1110:35;;1055:96;;;:::o;1157:126::-;1194:7;1234:42;1227:5;1223:54;1212:65;;1157:126;;;:::o;1289:77::-;1326:7;1355:5;1344:16;;1289:77;;;:::o;1495:117::-;1604:1;1601;1594:12;1618:122;1691:24;1709:5;1691:24;:::i;:::-;1684:5;1681:35;1671:63;;1730:1;1727;1720:12;1671:63;1618:122;:::o;1746:::-;1819:24;1837:5;1819:24;:::i;:::-;1812:5;1809:35;1799:63;;1858:1;1855;1848:12;1799:63;1746:122;:::o;226:539:0:-;;;;;;;",
  "deployedSourceMap": "226:539:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;369:17;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;392:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;418:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;347:16;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;604:158;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;369:17;;;;;;;;;;;;;:::o;392:20::-;;;;:::o;418:23::-;;;;:::o;347:16::-;;;;;;;;;;;;;:::o;604:158::-;649:4;701:2;687:11;;:16;;;;:::i;:::-;669:15;:34;665:73;;;726:1;719:8;;;;665:73;754:1;747:8;;604:158;;:::o;7:157:8:-;107:50;151:5;107:50;:::i;:::-;102:3;95:63;7:157;;:::o;170:118::-;257:24;275:5;257:24;:::i;:::-;252:3;245:37;170:118;;:::o;294:248::-;400:4;438:2;427:9;423:18;415:26;;451:84;532:1;521:9;517:17;508:6;451:84;:::i;:::-;294:248;;;;:::o;548:222::-;641:4;679:2;668:9;664:18;656:26;;692:71;760:1;749:9;745:17;736:6;692:71;:::i;:::-;548:222;;;;:::o;776:305::-;816:3;835:20;853:1;835:20;:::i;:::-;830:25;;869:20;887:1;869:20;:::i;:::-;864:25;;1023:1;955:66;951:74;948:1;945:81;942:107;;;1029:18;;:::i;:::-;942:107;1073:1;1070;1066:9;1059:16;;776:305;;;;:::o;1087:126::-;1124:7;1164:42;1157:5;1153:54;1142:65;;1087:126;;;:::o;1219:77::-;1256:7;1285:5;1274:16;;1219:77;;;:::o;1302:139::-;1365:9;1398:37;1429:5;1398:37;:::i;:::-;1385:50;;1302:139;;;:::o;1447:126::-;1497:9;1530:37;1561:5;1530:37;:::i;:::-;1517:50;;1447:126;;;:::o;1579:113::-;1629:9;1662:24;1680:5;1662:24;:::i;:::-;1649:37;;1579:113;;;:::o;1698:180::-;1746:77;1743:1;1736:88;1843:4;1840:1;1833:15;1867:4;1864:1;1857:15",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\n\ncontract ExponentialEmitter {\n    using Counters for Counters.Counter;\n    Counters.Counter private _rewardCounter;\n\n    ERC20 public cmk;\n    ERC20 public sCmk;\n    uint public halfLife;\n    uint public lastEmitted;\n\n    constructor(address _cmk, address _sCmk, uint _halfLife) {\n        cmk = ERC20(_cmk);\n        sCmk = ERC20(_sCmk);\n        halfLife = _halfLife;\n    }\n\n    function getEmittable() public view returns (uint) {\n        if (block.timestamp < lastEmitted + 60) {\n            return 0;\n        }\n        return 0;\n    }\n\n}",
  "sourcePath": "/Users/credmark/repos/access-key-contracts/contracts/ExponentialEmitter.sol",
  "ast": {
    "absolutePath": "/Users/credmark/repos/access-key-contracts/contracts/ExponentialEmitter.sol",
    "exportedSymbols": {
      "Context": [
        870
      ],
      "Counters": [
        944
      ],
      "ERC20": [
        745
      ],
      "ExponentialEmitter": [
        66
      ],
      "IERC20": [
        823
      ],
      "IERC20Metadata": [
        848
      ],
      "SafeMath": [
        1256
      ]
    },
    "id": 67,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 746,
        "src": "57:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 945,
        "src": "113:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 1257,
        "src": "166:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 66,
        "linearizedBaseContracts": [
          66
        ],
        "name": "ExponentialEmitter",
        "nameLocation": "235:18:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "id": 5,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 944,
              "src": "266:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "260:36:0",
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 876,
                "src": "279:16:0"
              },
              "referencedDeclaration": 876,
              "src": "279:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$876_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "_rewardCounter",
            "nameLocation": "326:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "301:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$876_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 876,
                "src": "301:16:0"
              },
              "referencedDeclaration": 876,
              "src": "301:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$876_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "ef3f197a",
            "id": 14,
            "mutability": "mutable",
            "name": "cmk",
            "nameLocation": "360:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "347:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$745",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 745,
                "src": "347:5:0"
              },
              "referencedDeclaration": 745,
              "src": "347:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$745",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2f388c15",
            "id": 17,
            "mutability": "mutable",
            "name": "sCmk",
            "nameLocation": "382:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "369:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$745",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 745,
                "src": "369:5:0"
              },
              "referencedDeclaration": 745,
              "src": "369:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$745",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7bc90d1c",
            "id": 19,
            "mutability": "mutable",
            "name": "halfLife",
            "nameLocation": "404:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "392:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "392:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "996c0b29",
            "id": 21,
            "mutability": "mutable",
            "name": "lastEmitted",
            "nameLocation": "430:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "418:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "418:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "505:93:0",
              "statements": [
                {
                  "expression": {
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "cmk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "515:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$745",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32,
                          "name": "_cmk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "527:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "521:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$745_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "521:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$745",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "515:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$745",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "515:17:0"
                },
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36,
                      "name": "sCmk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "542:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$745",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 38,
                          "name": "_sCmk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "555:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 37,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "549:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$745_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "549:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$745",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "542:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$745",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "542:19:0"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "halfLife",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "571:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43,
                      "name": "_halfLife",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "582:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "571:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "571:20:0"
                }
              ]
            },
            "id": 47,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_cmk",
                  "nameLocation": "468:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "460:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_sCmk",
                  "nameLocation": "482:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "474:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_halfLife",
                  "nameLocation": "494:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "489:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "459:45:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:0:0"
            },
            "scope": 66,
            "src": "448:150:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "655:107:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 52,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "669:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "669:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 54,
                        "name": "lastEmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "687:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "701:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "687:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "669:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61,
                  "nodeType": "IfStatement",
                  "src": "665:73:0",
                  "trueBody": {
                    "id": 60,
                    "nodeType": "Block",
                    "src": "705:33:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "726:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 51,
                        "id": 59,
                        "nodeType": "Return",
                        "src": "719:8:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "754:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 51,
                  "id": 63,
                  "nodeType": "Return",
                  "src": "747:8:0"
                }
              ]
            },
            "functionSelector": "f28c62d3",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEmittable",
            "nameLocation": "613:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:2:0"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "649:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:6:0"
            },
            "scope": 66,
            "src": "604:158:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 67,
        "src": "226:539:0",
        "usedErrors": []
      }
    ],
    "src": "32:733:0"
  },
  "legacyAST": {
    "absolutePath": "/Users/credmark/repos/access-key-contracts/contracts/ExponentialEmitter.sol",
    "exportedSymbols": {
      "Context": [
        870
      ],
      "Counters": [
        944
      ],
      "ERC20": [
        745
      ],
      "ExponentialEmitter": [
        66
      ],
      "IERC20": [
        823
      ],
      "IERC20Metadata": [
        848
      ],
      "SafeMath": [
        1256
      ]
    },
    "id": 67,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:0"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 746,
        "src": "57:55:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 945,
        "src": "113:52:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 67,
        "sourceUnit": 1257,
        "src": "166:57:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 66,
        "linearizedBaseContracts": [
          66
        ],
        "name": "ExponentialEmitter",
        "nameLocation": "235:18:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 8,
            "libraryName": {
              "id": 5,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 944,
              "src": "266:8:0"
            },
            "nodeType": "UsingForDirective",
            "src": "260:36:0",
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 876,
                "src": "279:16:0"
              },
              "referencedDeclaration": 876,
              "src": "279:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$876_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 11,
            "mutability": "mutable",
            "name": "_rewardCounter",
            "nameLocation": "326:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "301:39:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$876_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 10,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 9,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 876,
                "src": "301:16:0"
              },
              "referencedDeclaration": 876,
              "src": "301:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$876_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "ef3f197a",
            "id": 14,
            "mutability": "mutable",
            "name": "cmk",
            "nameLocation": "360:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "347:16:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$745",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 745,
                "src": "347:5:0"
              },
              "referencedDeclaration": 745,
              "src": "347:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$745",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2f388c15",
            "id": 17,
            "mutability": "mutable",
            "name": "sCmk",
            "nameLocation": "382:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "369:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$745",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 745,
                "src": "369:5:0"
              },
              "referencedDeclaration": 745,
              "src": "369:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$745",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7bc90d1c",
            "id": 19,
            "mutability": "mutable",
            "name": "halfLife",
            "nameLocation": "404:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "392:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 18,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "392:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "996c0b29",
            "id": 21,
            "mutability": "mutable",
            "name": "lastEmitted",
            "nameLocation": "430:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 66,
            "src": "418:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 20,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "418:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "505:93:0",
              "statements": [
                {
                  "expression": {
                    "id": 34,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 30,
                      "name": "cmk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "515:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$745",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 32,
                          "name": "_cmk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "527:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "521:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$745_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 33,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "521:11:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$745",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "515:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$745",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 35,
                  "nodeType": "ExpressionStatement",
                  "src": "515:17:0"
                },
                {
                  "expression": {
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36,
                      "name": "sCmk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "542:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$745",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 38,
                          "name": "_sCmk",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25,
                          "src": "555:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 37,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 745,
                        "src": "549:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$745_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 39,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "549:12:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$745",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "542:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$745",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "542:19:0"
                },
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "halfLife",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "571:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 43,
                      "name": "_halfLife",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "582:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "571:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "571:20:0"
                }
              ]
            },
            "id": 47,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23,
                  "mutability": "mutable",
                  "name": "_cmk",
                  "nameLocation": "468:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "460:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "460:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 25,
                  "mutability": "mutable",
                  "name": "_sCmk",
                  "nameLocation": "482:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "474:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 24,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "474:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 27,
                  "mutability": "mutable",
                  "name": "_halfLife",
                  "nameLocation": "494:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "489:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "489:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "459:45:0"
            },
            "returnParameters": {
              "id": 29,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "505:0:0"
            },
            "scope": 66,
            "src": "448:150:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "655:107:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 52,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "669:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "669:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 56,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 54,
                        "name": "lastEmitted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21,
                        "src": "687:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "3630",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "701:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_60_by_1",
                          "typeString": "int_const 60"
                        },
                        "value": "60"
                      },
                      "src": "687:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "669:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 61,
                  "nodeType": "IfStatement",
                  "src": "665:73:0",
                  "trueBody": {
                    "id": 60,
                    "nodeType": "Block",
                    "src": "705:33:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 58,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "726:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 51,
                        "id": 59,
                        "nodeType": "Return",
                        "src": "719:8:0"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "30",
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "754:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "functionReturnParameters": 51,
                  "id": 63,
                  "nodeType": "Return",
                  "src": "747:8:0"
                }
              ]
            },
            "functionSelector": "f28c62d3",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEmittable",
            "nameLocation": "613:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 48,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "625:2:0"
            },
            "returnParameters": {
              "id": 51,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "649:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "649:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "648:6:0"
            },
            "scope": 66,
            "src": "604:158:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 67,
        "src": "226:539:0",
        "usedErrors": []
      }
    ],
    "src": "32:733:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-10-01T19:43:33.568Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}